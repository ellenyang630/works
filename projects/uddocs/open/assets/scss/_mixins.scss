@charset "UTF-8";

/// Mixin to prefix a property
@mixin prefix($property, $value, $prefixes: ()) {
	@each $prefix in $prefixes {
		#{'-' + $prefix + '-' + $property}: $value;
	}
	// Output standard non-prefixed declaration
	#{$property}: $value;
}

// font-family
@mixin font-family($fontFam) {
	font-family: $fontFam;
}

// content value init
@mixin content-val($content) {
	content: $content;
	display:inline-block;
}

// float clear both
@mixin clearfix {
	&:after{
		content:"";
		display: block;
		clear:both;
	}
}

// button active 
@mixin btnActive($shadowColor){
	&:active,
	&:focus,
	&:hover,
	&.active{
		@include prefix(box-shadow, 0px 0px 4px 0px rgba($shadowColor, 0.3), webkit ms moz o);
	}
}


// animation keyframes 
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
	  @content; 
	}
	@-moz-keyframes #{$name} {
	  @content;
	}
	@-ms-keyframes #{$name} {
	  @content;
	}
	@keyframes #{$name} {
	  @content;
	} 
}


// placeholder
@mixin placeholder(){
	input::-webkit-input-placeholder,
	textarea::-webkit-input-placeholder{
		@content;
	}
	input:-moz-placeholder,
	textarea:-moz-placeholder {
		@content;
	}
	input::-moz-placeholder,
	textarea::-moz-placeholder{
		@content;
	}
	input:-ms-input-placeholder,
	textarea:-ms-input-placeholder{
		@content;
	}
	input::placeholder,
	textarea::placeholder{
		@content;
	}
}


// menu opener animation
@mixin line-props {
	position: absolute;
	width: 100%;
	height: 24px;
	background-color: $white; 
	border-radius: 4px;
	transition-property: transform, opacity;
	transition-timing-function: ease;
	transition-duration:  0.4s;
}

%bar-shape{
	position: absolute;
	width: 100%;
	height: 2px;
	// height: 24px;
	background-color: $white; 
	border-radius: 4px;
	transition-property: transform, opacity;
	transition-timing-function: ease;
	transition-duration:  0.4s;
	opacity: 1;
}

%hamburger{
	@extend %bar-shape;
	&:before, &:after{
		content: "";
		@extend %bar-shape;
	}
	&:before{
		top: -#{$h-vertical-gap};
	}
	&:after{
		top: $h-vertical-gap;
	}
}